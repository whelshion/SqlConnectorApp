//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Services.WYGC.Status
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://iface.service.centralizedOptimization.hn.app.inspur.com", ConfigurationName="Services.WYGC.Status.wygcStatusServicePortType")]
    public interface wygcStatusServicePortType
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> updateDesignSiteStateAsync(string in0, string in1, string in2, string in3, string in4, string in5);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> appendFormInfoAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> sendIrmsStateAsync(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> excuteScheduleTaskAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> excuteSchedule0llTaskAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> callWsAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> getFormInfoAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> updateDesignSiteJsStateAsync(string in0, string in1, string in2, string in3, string in4, string in5);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> excuteScheduleTaskByDayAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task finishSaopinAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> getParamCheckAsync(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> getPlanResultAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> finishZhijianAsync(string in0, string in1, string in2, string in3, string in4, string in5);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public interface wygcStatusServicePortTypeChannel : Services.WYGC.Status.wygcStatusServicePortType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public partial class wygcStatusServicePortTypeClient : System.ServiceModel.ClientBase<Services.WYGC.Status.wygcStatusServicePortType>, Services.WYGC.Status.wygcStatusServicePortType
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public wygcStatusServicePortTypeClient() : 
                base(wygcStatusServicePortTypeClient.GetDefaultBinding(), wygcStatusServicePortTypeClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.wygcStatusServiceHttpPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public wygcStatusServicePortTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(wygcStatusServicePortTypeClient.GetBindingForEndpoint(endpointConfiguration), wygcStatusServicePortTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public wygcStatusServicePortTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(wygcStatusServicePortTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public wygcStatusServicePortTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(wygcStatusServicePortTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public wygcStatusServicePortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> updateDesignSiteStateAsync(string in0, string in1, string in2, string in3, string in4, string in5)
        {
            return base.Channel.updateDesignSiteStateAsync(in0, in1, in2, in3, in4, in5);
        }
        
        public System.Threading.Tasks.Task<string> appendFormInfoAsync(string in0)
        {
            return base.Channel.appendFormInfoAsync(in0);
        }
        
        public System.Threading.Tasks.Task<string> sendIrmsStateAsync(string in0, string in1, string in2)
        {
            return base.Channel.sendIrmsStateAsync(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task<string> excuteScheduleTaskAsync(string in0)
        {
            return base.Channel.excuteScheduleTaskAsync(in0);
        }
        
        public System.Threading.Tasks.Task<string> excuteSchedule0llTaskAsync(string in0)
        {
            return base.Channel.excuteSchedule0llTaskAsync(in0);
        }
        
        public System.Threading.Tasks.Task<string> callWsAsync(string in0)
        {
            return base.Channel.callWsAsync(in0);
        }
        
        public System.Threading.Tasks.Task<string> getFormInfoAsync(string in0)
        {
            return base.Channel.getFormInfoAsync(in0);
        }
        
        public System.Threading.Tasks.Task<string> updateDesignSiteJsStateAsync(string in0, string in1, string in2, string in3, string in4, string in5)
        {
            return base.Channel.updateDesignSiteJsStateAsync(in0, in1, in2, in3, in4, in5);
        }
        
        public System.Threading.Tasks.Task<string> excuteScheduleTaskByDayAsync(string in0)
        {
            return base.Channel.excuteScheduleTaskByDayAsync(in0);
        }
        
        public System.Threading.Tasks.Task finishSaopinAsync(string in0)
        {
            return base.Channel.finishSaopinAsync(in0);
        }
        
        public System.Threading.Tasks.Task<string> getParamCheckAsync(string in0, string in1)
        {
            return base.Channel.getParamCheckAsync(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> getPlanResultAsync(string in0)
        {
            return base.Channel.getPlanResultAsync(in0);
        }
        
        public System.Threading.Tasks.Task<string> finishZhijianAsync(string in0, string in1, string in2, string in3, string in4, string in5)
        {
            return base.Channel.finishZhijianAsync(in0, in1, in2, in3, in4, in5);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.wygcStatusServiceHttpPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.wygcStatusServiceHttpPort))
            {
                return new System.ServiceModel.EndpointAddress("http://10.154.14.8:7200/workflow/services/wygcStatusService");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return wygcStatusServicePortTypeClient.GetBindingForEndpoint(EndpointConfiguration.wygcStatusServiceHttpPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return wygcStatusServicePortTypeClient.GetEndpointAddress(EndpointConfiguration.wygcStatusServiceHttpPort);
        }
        
        public enum EndpointConfiguration
        {
            
            wygcStatusServiceHttpPort,
        }
    }
}
